import { Button, Typography } from "@material-ui/core";

import {
  collection,
  deleteDoc,
  doc,
  onSnapshot,
  query,
  where,
} from "firebase/firestore";
import React, { useEffect, useState } from "react";
import { auth, db } from "../firebase/firebase";
import Modal from "../modal/Modal";

const Demo = ({ isAuth }) => {
  const [content, setContent] = useState([]);
  useEffect(() => {
    //   //this code here fires when the page load
    const colRef = collection(db, "urls");
    const q = query(colRef, where("type", "==", "reflect"));
    const unsub = onSnapshot(q, (snapshot) => {
      let contentArray = [];
      snapshot.forEach((doc) => {
        contentArray.push({ ...doc.data(), id: doc.id });
      });
      setContent(contentArray);
    });
    return () => unsub();
  }, []);

  //delete post
  const deletePost = async (id) => {
    const postDoc = doc(db, "urls", id);
    await deleteDoc(postDoc);
  };

  return (
    <div>
      <>{!isAuth ? "login to add something" : <Modal />}</>
      <div>
        {content.map((task) => {
          return (
            <div className="reflect-section" key={task.id}>
              <div>
                {content.map((task) => {
                  return (
                    <div className="reflect-section" key={task.id}>
                      <div className="title">
                        <Typography variant="h5">{task.info}</Typography>
                        {isAuth && task.author === auth.currentUser.uid && (
                          <Button
                            onClick={() => deletePost(task.id)}
                            variant="outlined"
                            style={{
                              display: "flex",
                              // backgroundColor: "red",

                              justifyContent: "flex-end",
                              fontSize: "10px",
                              marginLeft: "80%",
                              marginTop: "0",
                            }}
                          >
                            Delete
                          </Button>
                        )}
                      </div>
                      <div className="reflect-body">{task.text}</div>
                    </div>
                  );
                })}
              </div>
              <div className="title">
                <Typography variant="h5">{task.info}</Typography>
                {isAuth && task.author === auth.currentUser.uid && (
                  <Button
                    onClick={() => deletePost(task.id)}
                    variant="outlined"
                    style={{
                      display: "flex",
                      // backgroundColor: "red",

                      justifyContent: "flex-end",
                      fontSize: "10px",
                      marginLeft: "80%",
                      marginTop: "0",
                    }}
                  >
                    Delete
                  </Button>
                )}
              </div>
              <div className="reflect-body">{task.text}</div>
            </div>
          );
        })}
      </div>
    </div>
  );
};

export default Demo;






//good code

import { Button, Typography } from "@material-ui/core";

import {
  collection,
  deleteDoc,
  doc,
  onSnapshot,
  query,
  where,
} from "firebase/firestore";
import React, { useEffect, useState } from "react";
import { auth, db } from "../firebase/firebase";
import Modal from "../modal/Modal";

const Demo = ({ isAuth }) => {
  const [content, setContent] = useState([]);
  useEffect(() => {
    //   //this code here fires when the page load
    const colRef = collection(db, "urls");
    const q = query(colRef, where("type", "==", "demo"));
    const unsub = onSnapshot(q, (snapshot) => {
      let contentArray = [];
      snapshot.forEach((doc) => {
        contentArray.push({ ...doc.data(), id: doc.id });
      });
      setContent(contentArray);
    });
    return () => unsub();
  }, []);

  //delete post
  const deletePost = async (id) => {
    const postDoc = doc(db, "urls", id);
    await deleteDoc(postDoc);
  };

  return (
    <div>
      <>{!isAuth ? "login to add something" : <Modal />}</>
      <div>
        <div>
          {content.map((task) => {
            return (
              <>
                {isAuth && task.author === auth.currentUser.uid && (
                  <div className="reflect-section" key={task.id}>
                    <div className="title">
                      <Typography variant="h5">{task.info}</Typography>
                      <Button
                        onClick={() => deletePost(task.id)}
                        variant="outlined"
                        style={{
                          display: "flex",
                          // backgroundColor: "red",

                          justifyContent: "flex-end",
                          fontSize: "10px",
                          marginLeft: "80%",
                          marginTop: "0",
                        }}
                      >
                        Delete
                      </Button>
                      <div className="reflect-body">{task.text}</div>
                      <div className="title">
                        <Typography variant="h5">{task.info}</Typography>
                        {isAuth && task.author === auth.currentUser.uid && (
                          <Button
                            onClick={() => deletePost(task.id)}
                            variant="outlined"
                            style={{
                              display: "flex",
                              // backgroundColor: "red",

                              justifyContent: "flex-end",
                              fontSize: "10px",
                              marginLeft: "80%",
                              marginTop: "0",
                            }}
                          >
                            Delete
                          </Button>
                        )}
                      </div>
                      <div className="reflect-body">{task.text}</div>
                    </div>
                  </div>
                )}
              </>
            );
          })}
        </div>
      </div>
    </div>
  );
};

export default Demo;



//css try 
color: #263238; 